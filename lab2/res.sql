-- MySQL Script generated by MySQL Workbench
-- Wed Oct 25 09:14:59 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema dep_personnel
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema dep_personnel
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `dep_personnel` DEFAULT CHARACTER SET utf8 ;
USE `dep_personnel` ;

-- -----------------------------------------------------
-- Table `dep_personnel`.`position`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dep_personnel`.`position` (
  `pos_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Position number',
  `pos_name` VARCHAR(45) NOT NULL COMMENT 'Position name',
  PRIMARY KEY (`pos_id`),
  UNIQUE INDEX `pos_name_UNIQUE` (`pos_name` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dep_personnel`.`employee`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dep_personnel`.`employee` (
  `emp_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Employee number',
  `emp_chief_id` INT UNSIGNED NULL,
  `emp_position` INT UNSIGNED NOT NULL COMMENT 'Position number',
  `emp_surname` VARCHAR(45) NOT NULL COMMENT 'Surname',
  `emp_name` VARCHAR(45) NOT NULL COMMENT 'Name',
  `emp_patronymic` VARCHAR(45) NULL COMMENT 'Patronymic',
  `emp_work_experience` TINYINT UNSIGNED NULL,
  `emp_telephone_num` VARCHAR(16) NULL COMMENT 'Telephone number. There could be 1 or 0 telophone numbers for 1 employee. Telephone must be unique',
  UNIQUE INDEX `emp_telephone_num_UNIQUE` (`emp_telephone_num` ASC) VISIBLE,
  PRIMARY KEY (`emp_id`),
  INDEX `fk_employee_position1_idx` (`emp_position` ASC) VISIBLE,
  INDEX `tg_full_name` (`emp_surname` ASC, `emp_name` ASC, `emp_patronymic` ASC) INVISIBLE,
  INDEX `tg_phone` (`emp_telephone_num` ASC) INVISIBLE,
  INDEX `tg_work_experience` (`emp_work_experience` ASC) VISIBLE,
  INDEX `fk_employee_employee1_idx` (`emp_chief_id` ASC) VISIBLE,
  CONSTRAINT `fk_employee_position`
    FOREIGN KEY (`emp_position`)
    REFERENCES `dep_personnel`.`position` (`pos_id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_employee_employee1`
    FOREIGN KEY (`emp_chief_id`)
    REFERENCES `dep_personnel`.`employee` (`emp_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dep_personnel`.`company`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dep_personnel`.`company` (
  `cmp_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Company number',
  `cmp_name` VARCHAR(45) NOT NULL COMMENT 'Company name',
  PRIMARY KEY (`cmp_id`),
  UNIQUE INDEX `cmp_name_UNIQUE` (`cmp_name` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dep_personnel`.`order_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dep_personnel`.`order_type` (
  `tord_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Order type name',
  `tord_name` VARCHAR(45) NOT NULL COMMENT 'Order description',
  PRIMARY KEY (`tord_id`),
  UNIQUE INDEX `ord_type_UNIQUE` (`tord_name` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dep_personnel`.`order`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dep_personnel`.`order` (
  `ord_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Order number',
  `ord_type` INT UNSIGNED NOT NULL COMMENT 'Order code. Foreign key for order_type',
  `ord_date` DATE NOT NULL COMMENT 'Creation date',
  PRIMARY KEY (`ord_id`),
  INDEX `tord_id_idx` (`ord_type` ASC) VISIBLE,
  CONSTRAINT `tord_id`
    FOREIGN KEY (`ord_type`)
    REFERENCES `dep_personnel`.`order_type` (`tord_id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dep_personnel`.`contract`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dep_personnel`.`contract` (
  `ctr_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Contract number',
  `ctr_employee_id` INT UNSIGNED NOT NULL COMMENT 'Employee number',
  `ctr_company_id` INT UNSIGNED NOT NULL COMMENT 'Company number',
  `ctr_position` INT UNSIGNED NOT NULL COMMENT 'Position number',
  `ctr_order_id` INT UNSIGNED NOT NULL COMMENT 'Order number',
  `ctr_accept_date` DATE NOT NULL COMMENT 'Execution date',
  `ctr_salary` INT UNSIGNED NOT NULL COMMENT 'Salary',
  `ctr_termination_date` DATE NOT NULL COMMENT 'Dismissal date',
  `ctr_bonus` INT UNSIGNED NULL COMMENT 'Binuses to salary',
  PRIMARY KEY (`ctr_id`),
  INDEX `fk_contract_employee1_idx` (`ctr_employee_id` ASC) VISIBLE,
  INDEX `fk_contract_company1_idx` (`ctr_company_id` ASC) VISIBLE,
  INDEX `fk_contract_order1_idx` (`ctr_order_id` ASC) VISIBLE,
  INDEX `fk_contract_position1_idx` (`ctr_position` ASC) VISIBLE,
  INDEX `tg_company` (`ctr_company_id` ASC) INVISIBLE,
  INDEX `tg_temination_date` (`ctr_termination_date` ASC) VISIBLE,
  CONSTRAINT `fk_emp_id`
    FOREIGN KEY (`ctr_employee_id`)
    REFERENCES `dep_personnel`.`employee` (`emp_id`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT,
  CONSTRAINT `fk_cmp_id`
    FOREIGN KEY (`ctr_company_id`)
    REFERENCES `dep_personnel`.`company` (`cmp_id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE,
  CONSTRAINT `fk_contract_order1`
    FOREIGN KEY (`ctr_order_id`)
    REFERENCES `dep_personnel`.`order` (`ord_id`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT,
  CONSTRAINT `fk_contract_position1`
    FOREIGN KEY (`ctr_position`)
    REFERENCES `dep_personnel`.`position` (`pos_id`)
    ON DELETE RESTRICT
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dep_personnel`.`dismiss`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dep_personnel`.`dismiss` (
  `dsm_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Dismiss number',
  `dsm_employee_id` INT UNSIGNED NOT NULL COMMENT 'Dismissed emploee',
  `dsm_order_id` INT UNSIGNED NOT NULL COMMENT 'Order number',
  `dsm_contract_id` INT UNSIGNED NOT NULL COMMENT 'Terminated contract id',
  `dsm_dismiss_date` DATE NOT NULL COMMENT 'Date of execution',
  `dsm_cause` VARCHAR(45) NOT NULL COMMENT 'Dismiss cause',
  `dsm_pay` INT NULL COMMENT 'Payment to employee',
  PRIMARY KEY (`dsm_id`),
  INDEX `ord_id_idx` (`dsm_order_id` ASC) VISIBLE,
  INDEX `fk_dismiss_contract1_idx` (`dsm_contract_id` ASC) VISIBLE,
  INDEX `fk_dismiss_employee1_idx` (`dsm_employee_id` ASC) VISIBLE,
  INDEX `tg_employee` (`dsm_employee_id` ASC) VISIBLE,
  CONSTRAINT `ord_id`
    FOREIGN KEY (`dsm_order_id`)
    REFERENCES `dep_personnel`.`order` (`ord_id`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT,
  CONSTRAINT `fk_dismiss_contract1`
    FOREIGN KEY (`dsm_contract_id`)
    REFERENCES `dep_personnel`.`contract` (`ctr_id`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT,
  CONSTRAINT `fk_dismiss_employee1`
    FOREIGN KEY (`dsm_employee_id`)
    REFERENCES `dep_personnel`.`employee` (`emp_id`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dep_personnel`.`vacation`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dep_personnel`.`vacation` (
  `vac_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Vacation number\n',
  `vac_order_id` INT UNSIGNED NOT NULL COMMENT 'Order number',
  `vac_employee_id` INT UNSIGNED NOT NULL COMMENT 'Employee number',
  `vac_start_date` DATE NOT NULL COMMENT 'Vacation start',
  `vac_days_num` INT NOT NULL COMMENT 'Vacation length in days',
  `vac_pay_days` INT NULL COMMENT 'Payng days',
  PRIMARY KEY (`vac_id`),
  INDEX `fk_vacation_employee1_idx` (`vac_employee_id` ASC) VISIBLE,
  INDEX `tg_employee` (`vac_employee_id` ASC) VISIBLE,
  CONSTRAINT `ord_id`
    FOREIGN KEY (`vac_order_id`)
    REFERENCES `dep_personnel`.`order` (`ord_id`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT,
  CONSTRAINT `fk_vacation_employee1`
    FOREIGN KEY (`vac_employee_id`)
    REFERENCES `dep_personnel`.`employee` (`emp_id`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dep_personnel`.`business_trip`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dep_personnel`.`business_trip` (
  `bt_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Business trip number',
  `bt_order_id` INT UNSIGNED NOT NULL COMMENT 'Order number',
  `bt_destination` VARCHAR(45) NOT NULL COMMENT 'Destinatig point, location',
  `bt_period_days` INT UNSIGNED NOT NULL COMMENT 'Business trip length in days',
  `bt_start_date` DATE NOT NULL COMMENT 'Start of business trip',
  INDEX `ord_id_idx` (`bt_order_id` ASC) VISIBLE,
  PRIMARY KEY (`bt_id`),
  CONSTRAINT `ord_id`
    FOREIGN KEY (`bt_order_id`)
    REFERENCES `dep_personnel`.`order` (`ord_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dep_personnel`.`professional_growth`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dep_personnel`.`professional_growth` (
  `pg_id` INT UNSIGNED NOT NULL AUTO_INCREMENT COMMENT 'Professional growth number\n',
  `pg_order_id` INT UNSIGNED NOT NULL COMMENT 'Order number\n',
  `pg_prev_position` INT UNSIGNED NOT NULL COMMENT 'Previous position',
  `pg_new_position` INT UNSIGNED NOT NULL COMMENT 'New position',
  `pg_employee_id` INT UNSIGNED NOT NULL,
  `pg_reassignment_reason` VARCHAR(45) NOT NULL COMMENT 'Reason for position changing',
  `pg_reassignment_date` DATE NOT NULL COMMENT 'Date of execution\n',
  PRIMARY KEY (`pg_id`),
  INDEX `ord_id_idx` (`pg_order_id` ASC) VISIBLE,
  INDEX `fk_professional_growth_position1_idx` (`pg_prev_position` ASC) VISIBLE,
  INDEX `fk_professional_growth_position2_idx` (`pg_new_position` ASC) VISIBLE,
  INDEX `fk_professional_growth_employee1_idx` (`pg_employee_id` ASC) VISIBLE,
  CONSTRAINT `ord_id`
    FOREIGN KEY (`pg_order_id`)
    REFERENCES `dep_personnel`.`order` (`ord_id`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT,
  CONSTRAINT `fk_professional_growth_position1`
    FOREIGN KEY (`pg_prev_position`)
    REFERENCES `dep_personnel`.`position` (`pos_id`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT,
  CONSTRAINT `fk_professional_growth_position2`
    FOREIGN KEY (`pg_new_position`)
    REFERENCES `dep_personnel`.`position` (`pos_id`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT,
  CONSTRAINT `fk_professional_growth_employee1`
    FOREIGN KEY (`pg_employee_id`)
    REFERENCES `dep_personnel`.`employee` (`emp_id`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dep_personnel`.`passport`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dep_personnel`.`passport` (
  `psp_emp_id` INT UNSIGNED NOT NULL COMMENT 'Employee number',
  `psp_number` INT UNSIGNED NOT NULL COMMENT 'Passport number',
  `psp_birth_date` DATE NOT NULL COMMENT 'Employee\'s birth date',
  PRIMARY KEY (`psp_emp_id`),
  UNIQUE INDEX `psp_number_UNIQUE` (`psp_number` ASC) VISIBLE,
  CONSTRAINT `fk_passport_employee1`
    FOREIGN KEY (`psp_emp_id`)
    REFERENCES `dep_personnel`.`employee` (`emp_id`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dep_personnel`.`m2m_business_trip_employee`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `dep_personnel`.`m2m_business_trip_employee` (
  `m2m_bte_bt_id` INT UNSIGNED NOT NULL COMMENT 'Business trip number',
  `m2m_bte_emp_id` INT UNSIGNED NULL COMMENT 'Employee number',
  PRIMARY KEY (`m2m_bte_bt_id`, `m2m_bte_emp_id`),
  INDEX `fk_business_trip_has_employee_employee1_idx` (`m2m_bte_emp_id` ASC) VISIBLE,
  INDEX `fk_business_trip_has_employee_business_trip1_idx` (`m2m_bte_bt_id` ASC) VISIBLE,
  CONSTRAINT `fk_business_trip_has_employee_business_trip1`
    FOREIGN KEY (`m2m_bte_bt_id`)
    REFERENCES `dep_personnel`.`business_trip` (`bt_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_business_trip_has_employee_employee1`
    FOREIGN KEY (`m2m_bte_emp_id`)
    REFERENCES `dep_personnel`.`employee` (`emp_id`)
    ON DELETE RESTRICT
    ON UPDATE RESTRICT)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
